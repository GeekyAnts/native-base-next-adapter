{"version":3,"file":"withNativebase.js","sourceRoot":"","sources":["../src/withNativebase.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAYA,SAAwB,cAAc,CACpC,MAAsE,EACtE,KAAsB;IADtB,uBAAA,EAAA,WAAuB,YAAY,EAAE,EAAE,EAAE,OAAO,EAAE,EAAE,EAAE,UAAU,EAAE,EAAE,EAAE;IACtE,sBAAA,EAAA,UAAsB;IAEtB,6CAA6C;IAC7C,IAAI,YAAY,GAAG;QACjB,aAAa;QACb,kBAAkB;QAClB,kBAAkB;QAClB,gCAAgC;QAChC,6BAA6B;QAC7B,2BAA2B;QAC3B,6BAA6B;QAC7B,6BAA6B;QAC7B,0BAA0B;QAC1B,iCAAiC;QACjC,4BAA4B;QAC5B,6BAA6B;QAC7B,0BAA0B;QAC1B,2BAA2B;QAC3B,yBAAyB;QACzB,0BAA0B;QAC1B,yBAAyB;QACzB,sBAAsB;QACtB,2BAA2B;KAC5B,CAAC;IAEF,IAAI,MAAM,CAAC,YAAY,KAAK,SAAS,EAAE;QACrC,YAAY,mCAAO,YAAY,SAAK,MAAM,CAAC,YAAY,OAAC,CAAC;KAC1D;IACO,IAAA,IAAI,GAAK,OAAO,CAAC,MAAM,CAAC,KAApB,CAAqB;IACjC,IAAM,WAAW,GAAG,OAAO,CAAC,sBAAsB,CAAC,CAAC;IACpD,IAAM,MAAM,GAAG,OAAO,CAAC,wBAAwB,CAAC,CAAC,YAAY,CAAC,CAAC;IAC/D,OAAO,WAAW;QAEd,MAAM;OACH,CAAC,MAAM,CAAC,OAAO,IAAI,EAAE,CAAC,oBAIzB,OAAO,EAAE,UAAC,MAAM,EAAE,OAAO;YACvB,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC;gBACvB,IAAI,EAAE,QAAQ;gBACd,MAAM,EAAE,YAAY;gBACpB,OAAO,EAAE,IAAI,CAAC,OAAO,CACnB,SAAS,EACT,wCAAwC,CACzC;aACF,CAAC,CAAC;YACH,MAAM,CAAC,OAAO,CAAC,KAAK,yBACf,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,IAAI,EAAE,CAAC;gBAC/B,oEAAoE;gBACpE,eAAe,EAAE,kBAAkB,GAEpC,CAAC;YACF,MAAM,CAAC,OAAO,CAAC,UAAU;gBACvB,SAAS;gBACT,SAAS;gBACT,UAAU;eACP,MAAM,CAAC,OAAO,CAAC,UAAU,OAC7B,CAAC;YACF,OAAO,MAAM,CAAC;QAChB,CAAC,IACE,CAAC,MAAM,CAAC,UAAU,IAAI,MAAM,CAAC,UAAU,CAAC,qBAEzC,KAAK,QACV,CAAC;AACJ,CAAC;AAnED,oCAmEC","sourcesContent":["type ConfigType = {\n  dependencies: Array<any>;\n  plugins: Array<any>;\n  nextConfig: any;\n};\n\ntype withNativebaseParam = {\n  config: ConfigType;\n  // nextConfig?: any;\n  phase?: Array<any>;\n};\n\nexport default function withNativebase(\n  config: ConfigType = { dependencies: [], plugins: [], nextConfig: {} },\n  phase: Array<any> = []\n) {\n  // const { webpack, ...config } = nextConfig;\n  let dependencies = [\n    \"native-base\",\n    \"react-native-svg\",\n    \"react-native-web\",\n    \"react-native-safe-area-context\",\n    \"@react-aria/visually-hidden\",\n    \"@react-native-aria/button\",\n    \"@react-native-aria/checkbox\",\n    \"@react-native-aria/combobox\",\n    \"@react-native-aria/focus\",\n    \"@react-native-aria/interactions\",\n    \"@react-native-aria/listbox\",\n    \"@react-native-aria/overlays\",\n    \"@react-native-aria/radio\",\n    \"@react-native-aria/slider\",\n    \"@react-native-aria/tabs\",\n    \"@react-native-aria/utils\",\n    \"@react-stately/combobox\",\n    \"@react-stately/radio\",\n    \"@native-base/next-adapter\",\n  ];\n\n  if (config.dependencies !== undefined) {\n    dependencies = [...dependencies, ...config.dependencies];\n  }\n  const { path } = require(\"path\");\n  const withPlugins = require(\"next-compose-plugins\");\n  const withTM = require(\"next-transpile-modules\")(dependencies);\n  return withPlugins(\n    [\n      withTM,\n      ...(config.plugins || []),\n      // your plugins go here.\n    ],\n    {\n      webpack: (config, options) => {\n        config.module.rules.push({\n          test: /\\.ttf$/,\n          loader: \"url-loader\", // or directly file-loader\n          include: path.resolve(\n            __dirname,\n            \"node_modules/react-native-vector-icons\"\n          ),\n        });\n        config.resolve.alias = {\n          ...(config.resolve.alias || {}),\n          // Transform all direct `react-native` imports to `react-native-web`\n          \"react-native$\": \"react-native-web\",\n          // \"@expo/vector-icons\": \"react-native-vector-icons\",\n        };\n        config.resolve.extensions = [\n          \".web.js\",\n          \".web.ts\",\n          \".web.tsx\",\n          ...config.resolve.extensions,\n        ];\n        return config;\n      },\n      ...(config.nextConfig && config.nextConfig),\n    },\n    [...phase]\n  );\n}\n"]}